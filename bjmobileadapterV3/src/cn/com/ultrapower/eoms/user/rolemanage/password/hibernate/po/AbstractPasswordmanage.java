/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Dec 28 10:48:42 CST 2006 by MyEclipse Hibernate Tool.
 */
package cn.com.ultrapower.eoms.user.rolemanage.password.hibernate.po;

import java.io.Serializable;

/**
 * A class that represents a row in the PASSWORDMANAGE table. 
 * You can customize the behavior of this class by editing the class, {@link Passwordmanage()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractPasswordmanage 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Long pwdid;

    /** The value of the simple loginname property. */
    private java.lang.String loginname;

    /** The value of the simple password property. */
    private java.lang.String password;

    /** The value of the simple lastpassword property. */
    private java.lang.String lastpassword;

    /** The value of the simple nologintime property. */
    private java.lang.Long nologintime;

    /** The value of the simple connnum property. */
    private java.lang.Long connnum;

    /** The value of the simple lastmodifytime property. */
    private java.lang.Long lastmodifytime;

    /** The value of the simple status property. */
    private java.lang.Long status;

    /** The value of the simple startlogintime property. */
    private java.lang.Long startlogintime;

   private java.lang.Long ipcontrol_oaflag;
   private java.lang.String ipcontrol_oaip;
    
    public java.lang.Long getIpcontrol_oaflag() {
		return ipcontrol_oaflag;
	}

	public void setIpcontrol_oaflag(java.lang.Long ipcontrol_oaflag) {
		this.ipcontrol_oaflag = ipcontrol_oaflag;
	}

	public java.lang.String getIpcontrol_oaip() {
		return ipcontrol_oaip;
	}

	public void setIpcontrol_oaip(java.lang.String ipcontrol_oaip) {
		this.ipcontrol_oaip = ipcontrol_oaip;
	}

	/**
     * Simple constructor of AbstractPasswordmanage instances.
     */
    public AbstractPasswordmanage()
    {
    }

    /**
     * Constructor of AbstractPasswordmanage instances given a simple primary key.
     * @param pwdid
     */
    public AbstractPasswordmanage(java.lang.Long pwdid)
    {
        this.setPwdid(pwdid);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Long
     */
    public java.lang.Long getPwdid()
    {
        return pwdid;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param pwdid
     */
    public void setPwdid(java.lang.Long pwdid)
    {
        this.hashValue = 0;
        this.pwdid = pwdid;
    }

    /**
     * Return the value of the LOGINNAME column.
     * @return java.lang.String
     */
    public java.lang.String getLoginname()
    {
        return this.loginname;
    }

    /**
     * Set the value of the LOGINNAME column.
     * @param loginname
     */
    public void setLoginname(java.lang.String loginname)
    {
        this.loginname = loginname;
    }

    /**
     * Return the value of the PASSWORD column.
     * @return java.lang.String
     */
    public java.lang.String getPassword()
    {
        return this.password;
    }

    /**
     * Set the value of the PASSWORD column.
     * @param password
     */
    public void setPassword(java.lang.String password)
    {
        this.password = password;
    }

    /**
     * Return the value of the LASTPASSWORD column.
     * @return java.lang.String
     */
    public java.lang.String getLastpassword()
    {
        return this.lastpassword;
    }

    /**
     * Set the value of the LASTPASSWORD column.
     * @param lastpassword
     */
    public void setLastpassword(java.lang.String lastpassword)
    {
        this.lastpassword = lastpassword;
    }

    /**
     * Return the value of the NOLOGINTIME column.
     * @return java.lang.Long
     */
    public java.lang.Long getNologintime()
    {
        return this.nologintime;
    }

    /**
     * Set the value of the NOLOGINTIME column.
     * @param nologintime
     */
    public void setNologintime(java.lang.Long nologintime)
    {
        this.nologintime = nologintime;
    }

    /**
     * Return the value of the CONNNUM column.
     * @return java.lang.Long
     */
    public java.lang.Long getConnnum()
    {
        return this.connnum;
    }

    /**
     * Set the value of the CONNNUM column.
     * @param connnum
     */
    public void setConnnum(java.lang.Long connnum)
    {
        this.connnum = connnum;
    }

    /**
     * Return the value of the LASTMODIFYTIME column.
     * @return java.lang.Long
     */
    public java.lang.Long getLastmodifytime()
    {
        return this.lastmodifytime;
    }

    /**
     * Set the value of the LASTMODIFYTIME column.
     * @param lastmodifytime
     */
    public void setLastmodifytime(java.lang.Long lastmodifytime)
    {
        this.lastmodifytime = lastmodifytime;
    }

    /**
     * Return the value of the STATUS column.
     * @return java.lang.Long
     */
    public java.lang.Long getStatus()
    {
        return this.status;
    }

    /**
     * Set the value of the STATUS column.
     * @param status
     */
    public void setStatus(java.lang.Long status)
    {
        this.status = status;
    }

    /**
     * Return the value of the STARTLOGINTIME column.
     * @return java.lang.Long
     */
    public java.lang.Long getStartlogintime()
    {
        return this.startlogintime;
    }

    /**
     * Set the value of the STARTLOGINTIME column.
     * @param startlogintime
     */
    public void setStartlogintime(java.lang.Long startlogintime)
    {
        this.startlogintime = startlogintime;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof Passwordmanage))
            return false;
        Passwordmanage that = (Passwordmanage) rhs;
        if (this.getPwdid() == null || that.getPwdid() == null)
            return false;
        return (this.getPwdid().equals(that.getPwdid()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int pwdidValue = this.getPwdid() == null ? 0 : this.getPwdid().hashCode();
            result = result * 37 + pwdidValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
